# Force ROS libraries to build and link against Unreal's OpenSSL

set(UE_THIRD_PARTY_PATH "$ENV{UE_THIRD_PARTY_PATH}")
set(UE_PLATFORM "$ENV{UE_PLATFORM}")

set(CMAKE_FIND_PACKAGE_PREFER_CONFIG OFF)

set(OPENSSL_FOUND TRUE CACHE BOOL "OpenSSL found" FORCE)
set(OPENSSL_ROOT_DIR "${UE_THIRD_PARTY_PATH}/OpenSSL/1.1.1t/include/${UE_PLATFORM}" CACHE PATH "OpenSSL root directory" FORCE)
set(OPENSSL_USE_STATIC_LIBS TRUE CACHE BOOL "Use static OpenSSL libraries" FORCE)
set(OPENSSL_INCLUDE_DIR "${UE_THIRD_PARTY_PATH}/OpenSSL/1.1.1t/include/${UE_PLATFORM}" CACHE PATH "OpenSSL include directory" FORCE)
set(OPENSSL_CRYPTO_LIBRARY "${UE_THIRD_PARTY_PATH}/OpenSSL/1.1.1t/lib/${UE_PLATFORM}/libcrypto.a" CACHE FILEPATH "OpenSSL crypto library" FORCE)
SET(OPENSSL_SSL_LIBRARY "${UE_THIRD_PARTY_PATH}/OpenSSL/1.1.1t/lib/${UE_PLATFORM}/libssl.a" CACHE FILEPATH "OpenSSL SSL library" FORCE)
SET(OPENSSL_LIBRARIES "${UE_THIRD_PARTY_PATH}/OpenSSL/1.1.1t/lib/${UE_PLATFORM}/libssl.a ${UE_THIRD_PARTY_PATH}OpenSSL/1.1.1t/lib/${UE_PLATFORM}/libcrypto.a" CACHE STRING "OpenSSL libraries" FORCE)
SET(OPENSSL_VERSION "1.1.1t" CACHE STRING "OpenSSL version" FORCE)

if(NOT TARGET OpenSSL::Crypto)
    add_library(OpenSSL::Crypto STATIC IMPORTED)
endif()
set_target_properties(OpenSSL::Crypto PROPERTIES
    IMPORTED_LOCATION "${OPENSSL_CRYPTO_LIBRARY}"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
    INTERFACE_INCLUDE_DIRECTORIES "${OPENSSL_INCLUDE_DIR}")

if(NOT TARGET OpenSSL::SSL)
    add_library(OpenSSL::SSL STATIC IMPORTED)
endif()
set_target_properties(OpenSSL::SSL PROPERTIES
    IMPORTED_LOCATION "${OPENSSL_SSL_LIBRARY}"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
    INTERFACE_INCLUDE_DIRECTORIES "${OPENSSL_INCLUDE_DIR}")
